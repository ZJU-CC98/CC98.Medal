@model string

<div id="buy-setting-panel" data-value="@Model">


	<input type="hidden" name="@ViewBag.ModelName" v-bind:value="itemString" />

	<table class="ui celled selectable table" v-if="items && items.length !== 0">
		<thead>
		<tr>
			<th>时间（天）</th>
			<th>价格</th>
			<th>操作</th>
		</tr>
		</thead>
		<tbody>
		<tr v-for="item in items">
			<td>
				<input type="number" min="0" step="1" placeholder="永久" class="ui mini input" v-model="item.expireDays" />
			</td>
			<td>
				<input type="number" min="0" step="1" class="ui mini input" v-model="item.price" />
			</td>
			<td>
				<div class="mini ui buttons">
					<button type="button" class="ui mini negative button" v-on:click="deleteItem(item)">删除</button>
				</div>
			</td>
		</tr>
		</tbody>
	</table>
	
	<div v-else class="ui segment center aligned">
		<p>目前还没有设置任何购买信息。</p>
	</div>


	<button type="button" class="ui tiny primary button" v-on:click="addNewItem()">添加新项目</button>
	<button type="button" class="ui tiny negative button" v-on:click="clearItems()">清空所有项目</button>

</div>


<script>

	function initializeVue() {

		var buySettingVue = {

			data() {
				return {
					items: []
				};
			},

			computed: {
				itemString: {
					get() {
						return JSON.stringify(this.items);
					},
					set(value) {

						// 忽略因为各种原因导致产生的错误设置
						try {
							this.items = JSON.parse(value) || [];
						} catch (e) {
							this.items = [];
						} 
					}
				}
			},

			methods: {
				deleteItem(item) {
					this.items.splice(this.items.indexOf(item), 1);
				},
				addNewItem() {
					this.items.push({ expireDays: null, price: 0 });
				},
				clearItems() {
					this.items = [];
				}
			},

			mounted() {
				this.itemString = $('#buy-setting-panel').data('value');
			}

		};

		Vue.createApp(buySettingVue).mount('#buy-setting-panel');
	}

</script>